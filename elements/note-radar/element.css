:host {
    display: block;
    width: 360px;
    height: 369px;
    background-color: transparent;
}

:host > h4 {
    display: none;
    background-color: #dddddd;
    padding-left: 0.375rem;
    padding-right: 0.375rem;
    line-height: 1.3125rem;
    width: fit-content;
    min-width: 10rem;
    margin-left: auto;
    margin-right: auto;
    border-radius: 0.375em;
}

:host > file-menu {
    display: none;
}

:host > .inputs-ol {
    margin-left: auto;
    margin-right: auto;
}

.inputs-ol > li {
    /* Put input in the centre */
    margin-left: auto;
    margin-right: auto;
}

svg  {
    overflow: visible;
    width: 100%;
}

line {
    stroke: #000000;
    stroke-width: 0.25;
}

.region {
    transition: fill 0.08s linear;
}

.region[data-pitch^="A-"] { fill: oklch(0.9 0.02 222); }
.region[data-pitch^="B♭"] { fill: oklch(0.9 0.02 252); }
.region[data-pitch^="B-"] { fill: oklch(0.9 0.02 282); }
.region[data-pitch^="C-"] { fill: oklch(0.9 0.02 312); }
.region[data-pitch^="C♯"] { fill: oklch(0.9 0.02 342); }
.region[data-pitch^="D-"] { fill: oklch(0.9 0.02 12); }
.region[data-pitch^="E♭"] { fill: oklch(0.9 0.02 42); }
.region[data-pitch^="E-"] { fill: oklch(0.9 0.02 72); }
.region[data-pitch^="F-"] { fill: oklch(0.9 0.02 102); }
.region[data-pitch^="F♯"] { fill: oklch(0.9 0.02 132); }
.region[data-pitch^="G-"] { fill: oklch(0.9 0.02 162); }
.region[data-pitch^="G♯"] { fill: oklch(0.9 0.02 192); }

.region.highlight[data-pitch^="A-"],
.region.highlight[data-pitch^="A-"] ~ .region[data-pitch^="A-"] { fill: oklch(0.8 0.04 222); transition-duration: 0.032s; }
.region.highlight[data-pitch^="B♭"],
.region.highlight[data-pitch^="B♭"] ~ .region[data-pitch^="B♭"] { fill: oklch(0.8 0.04 252); transition-duration: 0.032s; }
.region.highlight[data-pitch^="B-"],
.region.highlight[data-pitch^="B-"] ~ .region[data-pitch^="B-"] { fill: oklch(0.8 0.04 282); transition-duration: 0.032s; }
.region.highlight[data-pitch^="C-"],
.region.highlight[data-pitch^="C-"] ~ .region[data-pitch^="C-"] { fill: oklch(0.8 0.04 312); transition-duration: 0.032s; }
.region.highlight[data-pitch^="C♯"],
.region.highlight[data-pitch^="C♯"] ~ .region[data-pitch^="C♯"] { fill: oklch(0.8 0.04 342); transition-duration: 0.032s; }
.region.highlight[data-pitch^="D-"],
.region.highlight[data-pitch^="D-"] ~ .region[data-pitch^="D-"] { fill: oklch(0.8 0.04 12); transition-duration: 0.032s; }
.region.highlight[data-pitch^="E♭"],
.region.highlight[data-pitch^="E♭"] ~ .region[data-pitch^="E♭"] { fill: oklch(0.8 0.04 42); transition-duration: 0.032s; }
.region.highlight[data-pitch^="E-"],
.region.highlight[data-pitch^="E-"] ~ .region[data-pitch^="E-"] { fill: oklch(0.8 0.04 72); transition-duration: 0.032s; }
.region.highlight[data-pitch^="F-"],
.region.highlight[data-pitch^="F-"] ~ .region[data-pitch^="F-"] { fill: oklch(0.8 0.04 102); transition-duration: 0.032s; }
.region.highlight[data-pitch^="F♯"],
.region.highlight[data-pitch^="F♯"] ~ .region[data-pitch^="F♯"] { fill: oklch(0.8 0.04 132); transition-duration: 0.032s; }
.region.highlight[data-pitch^="G-"],
.region.highlight[data-pitch^="G-"] ~ .region[data-pitch^="G-"] { fill: oklch(0.8 0.04 162); transition-duration: 0.032s; }
.region.highlight[data-pitch^="G♯"],
.region.highlight[data-pitch^="G♯"] ~ .region[data-pitch^="G♯"] { fill: oklch(0.8 0.04 192); transition-duration: 0.032s; }

:host([scale~="A"])  .region[data-pitch^="A-"] { fill: oklch(0.8 0.04 222); }
:host([scale~="A♯"]) .region[data-pitch^="B♭"],
:host([scale~="A#"]) .region[data-pitch^="B♭"],
:host([scale~="B♭"]) .region[data-pitch^="B♭"],
:host([scale~="Bb"]) .region[data-pitch^="B♭"] { fill: oklch(0.8 0.04 252); }
:host([scale~="B"])  .region[data-pitch^="B-"] { fill: oklch(0.8 0.04 282); }
:host([scale~="C"])  .region[data-pitch^="C-"] { fill: oklch(0.8 0.04 312); }
:host([scale~="C♯"]) .region[data-pitch^="C♯"],
:host([scale~="C#"]) .region[data-pitch^="C♯"],
:host([scale~="D♭"]) .region[data-pitch^="C♯"],
:host([scale~="Db"]) .region[data-pitch^="C♯"] { fill: oklch(0.8 0.04 342); }
:host([scale~="D"])  .region[data-pitch^="D-"] { fill: oklch(0.8 0.04 12); }
:host([scale~="D♯"]) .region[data-pitch^="E♭"],
:host([scale~="D#"]) .region[data-pitch^="E♭"],
:host([scale~="E♭"]) .region[data-pitch^="E♭"],
:host([scale~="Eb"]) .region[data-pitch^="E♭"] { fill: oklch(0.8 0.04 42); }
:host([scale~="E"])  .region[data-pitch^="E-"] { fill: oklch(0.8 0.04 72); }
:host([scale~="F"])  .region[data-pitch^="F-"] { fill: oklch(0.8 0.04 102); }
:host([scale~="F♯"]) .region[data-pitch^="F♯"],
:host([scale~="F#"]) .region[data-pitch^="F♯"],
:host([scale~="G♭"]) .region[data-pitch^="F♯"],
:host([scale~="Gb"]) .region[data-pitch^="F♯"] { fill: oklch(0.8 0.04 132); }
:host([scale~="G"])  .region[data-pitch^="G-"] { fill: oklch(0.8 0.04 162); }
:host([scale~="G♯"]) .region[data-pitch^="G♯"],
:host([scale~="G#"]) .region[data-pitch^="G♯"],
:host([scale~="A♭"]) .region[data-pitch^="G♯"],
:host([scale~="Ab"]) .region[data-pitch^="G♯"] { fill: oklch(0.8 0.04 192); }

.name {
    font-family: sans-serif;
    font-size: 4px;
    text-anchor: middle;
    dominant-baseline: middle;
    letter-spacing: -0.4px;
}

.name[data-pitch^="A"]  { fill: oklch(0.4 0.2 222); }
.name[data-pitch^="B♭"] { fill: oklch(0.4 0.2 252); }
.name[data-pitch^="B"]  { fill: oklch(0.4 0.2 282); }
.name[data-pitch^="C"]  { fill: oklch(0.4 0.2 312); }
.name[data-pitch^="C♯"] { fill: oklch(0.4 0.2 342); }
.name[data-pitch^="D"]  { fill: oklch(0.4 0.2 12); }
.name[data-pitch^="E♭"] { fill: oklch(0.4 0.2 42); }
.name[data-pitch^="E"]  { fill: oklch(0.4 0.2 72); }
.name[data-pitch^="F"]  { fill: oklch(0.4 0.2 102); }
.name[data-pitch^="F♯"] { fill: oklch(0.4 0.2 132); }
.name[data-pitch^="G"]  { fill: oklch(0.4 0.2 162); }
.name[data-pitch^="G♯"] { fill: oklch(0.4 0.2 192); }

.disc[data-pitch^="A"]  { fill: oklch(0.96 0.01 222 / 0.8); }
.disc[data-pitch^="B♭"] { fill: oklch(0.96 0.01 252 / 0.8); }
.disc[data-pitch^="B"]  { fill: oklch(0.96 0.01 282 / 0.8); }
.disc[data-pitch^="C"]  { fill: oklch(0.96 0.01 312 / 0.8); }
.disc[data-pitch^="C♯"] { fill: oklch(0.96 0.01 342 / 0.8); }
.disc[data-pitch^="D"]  { fill: oklch(0.96 0.01 12 / 0.8); }
.disc[data-pitch^="E♭"] { fill: oklch(0.96 0.01 42 / 0.8); }
.disc[data-pitch^="E"]  { fill: oklch(0.96 0.01 72 / 0.8); }
.disc[data-pitch^="F"]  { fill: oklch(0.96 0.01 102 / 0.8); }
.disc[data-pitch^="F♯"] { fill: oklch(0.96 0.01 132 / 0.8); }
.disc[data-pitch^="G"]  { fill: oklch(0.96 0.01 162 / 0.8); }
.disc[data-pitch^="G♯"] { fill: oklch(0.96 0.01 192 / 0.8); }
